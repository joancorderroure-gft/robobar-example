"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.start = void 0;
const tslib_1 = require("tslib");
const path_1 = (0, tslib_1.__importDefault)(require("path"));
const decamelize_1 = (0, tslib_1.__importDefault)(require("decamelize"));
const semver_1 = (0, tslib_1.__importDefault)(require("semver"));
const util_1 = require("@stryker-mutator/util");
const MIN_ANGULAR_CLI_VERSION = '6.1.0';
async function start(getLogger, ngConfig) {
    const logger = getLogger(path_1.default.basename(__filename));
    verifyAngularCliVersion();
    // Make sure require angular cli from inside this function, that way it won't break if angular isn't installed and this file is required.
    let cli = (0, util_1.requireResolve)('@angular/cli');
    if ('default' in cli) {
        cli = cli.default;
    }
    const cliArgs = ['test', '--progress=false', `--karma-config=${require.resolve('./stryker-karma.conf')}`];
    if (ngConfig === null || ngConfig === void 0 ? void 0 : ngConfig.testArguments) {
        const testArguments = ngConfig.testArguments;
        const ngTestArguments = Object.keys(testArguments);
        verifyNgTestArguments(ngTestArguments);
        ngTestArguments.forEach((key) => {
            const decamelizedKey = (0, decamelize_1.default)(key, { separator: '-' });
            if ('progress' !== key && 'karma-config' !== decamelizedKey) {
                cliArgs.push(`--${decamelizedKey}=${testArguments[key]}`);
            }
        });
    }
    const actualCommand = `ng ${cliArgs.join(' ')}`;
    logger.debug(`Starting Angular tests: ${actualCommand}`);
    return {
        exitPromise: cli({ cliArgs }),
    };
}
exports.start = start;
function verifyAngularCliVersion() {
    const pkg = (0, util_1.requireResolve)('@angular/cli/package');
    const version = semver_1.default.coerce(pkg.version);
    if (!version || semver_1.default.lt(version, MIN_ANGULAR_CLI_VERSION)) {
        throw new Error(`Your @angular/cli version (${version}) is not supported. Please install ${MIN_ANGULAR_CLI_VERSION} or higher`);
    }
}
function verifyNgTestArguments(ngTestArguments) {
    const prefixedArguments = ngTestArguments.filter((key) => key.trim().startsWith('-'));
    if (prefixedArguments.length > 0) {
        throw new Error(`Don't prefix arguments with dashes ('-'). Stryker will do this automatically. Problematic arguments are ${prefixedArguments}.`);
    }
}
//# sourceMappingURL=angular-starter.js.map